@model Zombiecalypse.Models.AdventureViewModel


@{
    ViewBag.Title = "On adventure";
}

<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
<!------ Include the above in your HEAD tag ---------->

<h2>On adventure</h2>
@Html.ActionLink("Finish adventure", "StopAdventure", "Adventures", new { id = User.Identity.Name }, null)

Whos turn:  @ViewBag.WhosTurn

Manage turns: @Html.ActionLink("Manage turn", "ManageTurns", "Adventures", new { id = User.Identity.Name, returnUrl = "/AdventureZombieAttack/"+User.Identity.Name }, null)

@*<span id="adventurecounter">
    </span>*@
<div class="container">
    <div class="row">
        <section>
            <div class="wizard">
                <div class="wizard-inner">
                    <div class="connecting-line"></div>
                    <ul class="nav nav-tabs" role="tablist">
                        @for (int counter = 1; counter <= Model.Adventure.AdventureSteps; counter++)
                        {
                            string id = "step" + counter;
                            <li id=@id role="presentation" class="disabled">
                                <a href="#@id" data-toggle="tab" aria-controls=@id role="tab" title=@id>
                                    <span class="round-tab">
                                        <i class="glyphicon glyphicon-circle-arrow-right"></i>
                                    </span>
                                </a>
                            </li>
                        }
                        <li id="complete" role="presentation" class="disabled">
                            <a href="#complete" data-toggle="tab" aria-controls="complete" role="tab" title="Complete">
                                <span class="round-tab">
                                    <i class="glyphicon glyphicon-ok"></i>
                                </span>
                            </a>
                        </li>
                    </ul>
                </div>

                <form role="form">
                    <div class="tab-content">

                        @for (int counter = 1; counter <= Model.Adventure.AdventureSteps; counter++)
                        {
                            string id = "tabpanelstep" + counter;
                            <div class="tab-pane" role="tabpanel" id=@id>
                                <h3>Round @counter</h3>

                                @Html.ActionLink("AdventureDropCalculator", "AdventureDropCalculator", "Adventures", new { AdId = Model.Adventure.AdventureID, ChId = Model.Character.CharacterID }, null) <br />

                                @Html.ActionLink("Finish adventure", "StopAdventure", "Adventures", new { AdId = Model.Adventure.AdventureID, ChId = Model.Character.CharacterID }, null) <br />

                                Tolerance:  @Model.Character.MaxTolerance / @Model.Character.Tolerance <br />

                                <table align="center">

                                    @foreach (var zombie in Model.ZombiesAttackAdventurer)
                                    {
                                        if (@zombie.State == counter)
                                        {
                                            <td>
                                                <img onclick="document.getElementById(@zombie.ZombieAttackAdventurerID).style.display = 'inline' " src=@zombie.Zombie.ZombiePicture />
                                                <table cellspacing="100">
                                                    <td>
                                                        @Html.ActionLink("ZAA", "ZombieAttackAdventurer", "Adventures", new { id = @zombie.ZombieAttackAdventurerID }, null)
                                                    </td>
                                                    <tr></tr>
                                                    <td>
                                                        @zombie.ZombieAttackAdventurerID
                                                    </td>
                                                    <tr></tr>
                                                    <td>
                                                        @zombie.Zombie.ZombieName
                                                    </td>
                                                    <tr></tr>
                                                    <td>
                                                        Life: @zombie.ZombieLife / @zombie.Zombie.ZombieLife
                                                    </td>
                                                    <tr></tr>
                                                    <td>
                                                        Damage: @zombie.Zombie.ZombieDamage
                                                    </td>
                                                    <tr></tr>
                                                    <td>
                                                        yourTurn:@zombie.isYourTourn
                                                    </td>
                                                    <td id=@zombie.ZombieAttackAdventurerID style="display:none">
                                                        @foreach (var item in Model.Character.Inventory)
                                                        {
                                                            if (item.Item.GetType().Name.Contains("Weapon"))
                                                            {
                                                                if (item.ItemPieces > 0)
                                                                {
                                                                    <table>
                                                                        <tr>
                                                                            <td><img src=@item.Item.ItemPicture /></td>
                                                                            <td>@item.Item.ItemName</td>
                                                                            <td>durability:@item.ItemCurrentDurability / @item.ItemMaxDurability</td>
                                                                            <td>@Html.ActionLink("Attack with " + @item.Item.ItemName, "AttackZombie", new { zAAID = zombie.ZombieAttackAdventurerID, InvID = @item.InventoryID }, new { @class = "ActionLinkButton" })</td>
                                                                        </tr>
                                                                    </table>
                                                                    <br />
                                                                }

                                                            }
                                                        }
                                                    </td>
                                                    <tr>
                                                        <td><div class="ActionLinkButton" onclick="document.getElementById(@zombie.ZombieAttackAdventurerID).style.display = 'inline'">Attack this zombie</div></td>
                                                    </tr>
                                                </table>

                                            </td>
                                        }
                                    }
                                </table>
                                <ul class="list-inline pull-right">
                                    @*<li><button type="button" class="btn btn-primary next-step">Save and continue</button></li>*@
                                </ul>
                            </div>
                        }

                        @*<ul class="list-inline pull-right">
                                <li><button type="button" class="btn btn-default prev-step">Previous</button></li>
                                <li><button type="button" class="btn btn-default next-step">Skip</button></li>
                                <li><button type="button" class="btn btn-primary btn-info-full next-step">Save and continue</button></li>
                            </ul>*@
                        <div align="center" class="tab-pane" role="tabpanel" id="tabpanelcomplete">
                            <h3>Complete</h3>
                            <p>You have successfully completed all steps.</p>

                            <img src="~/Content/Pictures/Adventures/lada1.png" /><br />
                            @Html.ActionLink("Collect reward", "CollectReward", "Adventures", new { AdId = 1, ChId = User.Identity.Name }, new { @class = "ActionLinkButton" })
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </form>
            </div>
        </section>
    </div>
</div>

    CharacterID: @Model.Character.CharacterID <br />
    Adventure state: @Model.Character.AdventureState <br />
    Is on adventure: @Model.Character.IsOnAdventure <br />
    Finish adventure: @Model.Character.FinishAdventure <br />
    Adventure ID: @Model.Adventure.AdventureID

    <br />

    @Html.ActionLink("Exit adventure", "StopAdventure", "Adventures", new { ChId = User.Identity.Name }, null)

    <br />
    @for (var k = 1; k <= Model.Adventure.AdventureSteps; k++)
    {
        <div>
            counter @k: @Model.ZombiesAttackAdventurer.Where(x => x.State == k).Count()
        </div>

    }

    @{ var cc = 1; }

    @for (var i = 1; i <= Model.Adventure.AdventureSteps; i++)
    {
        string name = "tabpanelstep" + i;
        int j = i + 1;
        string nameplus = "tabpanelstep" + j;

        <script>
            console.log("Model.Adventure.AdventureSteps: " +@Model.Adventure.AdventureSteps);
            console.log("counter:" +@i);


            $(document).ready(function () {

                if (@Model.ZombiesAttackAdventurer.Where(x => x.State == 1).Count() > 0) {
                    $(document.getElementById("tabpanelstep1")).addClass("active");
                    $(document.getElementById("step1")).addClass('active');
                    $(document.getElementById("step1")).removeClass('disabled');
                    console.log("eleje: step:" +@i);
                }
                if (@Model.ZombiesAttackAdventurer.Where(x => x.State == j).Count() > 0 && @Model.ZombiesAttackAdventurer.Where(x => x.State == i).Count() == 0) {
                    $(document.getElementById("tabpanelstep"+@j )).addClass("active");

                    $(document.getElementById("step"+@i)).addClass('disabled');
                    $(document.getElementById("step"+@i)).removeClass('active');
                    $(document.getElementById("step"+@j)).addClass('active');
                    $(document.getElementById("step"+@j)).removeClass('disabled');
                    console.log("koztes: step: " +@j);
                }

                if(@Model.ZombiesAttackAdventurer.Where(x => x.State == Model.Adventure.AdventureSteps).Count() > 0 == 0){
                    $(document.getElementById("tabpanelcomplete")).addClass("active");

                    $(document.getElementById(@Model.Adventure.AdventureSteps-1)).addClass('disabled');
                    $(document.getElementById(@Model.Adventure.AdventureSteps-1)).removeClass('active');
                    $(document.getElementById("complete")).addClass('active');
                    $(document.getElementById("complete")).removeClass('disabled');
                    console.log("complte: " +@i)

                }


                var $active = $('.wizard .nav-tabs li.active');

                //$active.addClass("disabled");

                //Initialize tooltips
                $('.nav-tabs > li a[title]').tooltip();

                //Wizard
                $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {

                    var $target = $(e.target);

                    if ($target.parent().hasClass('disabled')) {
                        return false;
                    }
                });

                $(".next-step").click(function (e) {

                    var $active = $('.wizard .nav-tabs li.active');
                    //$active.addClass("disabled");
                    $active.next().removeClass('disabled');
                    nextTab($active);

                });
                $(".prev-step").click(function (e) {
                    var $active = $('.wizard .nav-tabs li.active');
                    prevTab($active);

                });
            });

            function nextTab(elem) {
                $(elem).next().find('a[data-toggle="tab"]').click();
            }
            function prevTab(elem) {
                $(elem).prev().find('a[data-toggle="tab"]').click();
            }
        </script>
    }